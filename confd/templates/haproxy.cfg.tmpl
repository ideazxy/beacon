global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        # option        httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

{{range $name := ls "/haproxy/http"}}
frontend {{$name}}
        mode http
        option httplog
        bind {{printf "/haproxy/http/%s/listen" $name | getv}}
        {{range $backend := ls (printf "/haproxy/http/%s/backends" $name)}}
        {{range $host := ls (printf "/haproxy/http/%s/backends/%s/hosts" $name $backend)}}
        acl acl_{{$backend}} hdr(host),lower {{$host}}
        {{end}}
        use_backend {{$backend}} if acl_{{$backend}}
        {{end}}

{{range $backend := ls (printf "/haproxy/http/%s/backends" $name)}}
backend {{$backend}}
        balance roundrobin
        {{range $upstream := ls (printf "/haproxy/http/%s/backends/%s/upstreams" $name $backend)}}
        server {{$upstream}} {{printf "/haproxy/http/%s/backends/%s/upstreams/%s/listen" $name $backend $upstream | getv}} cookie A check
        {{end}}
{{end}}
{{end}}

{{range $name := ls "/haproxy/tcp"}}
listen {{$name}}
        mode tcp
        option tcplog
        bind {{printf "/haproxy/tcp/%s/listen" $name | getv}}
        {{range $upstream := ls (printf "/haproxy/tcp/%s/upstreams" $name)}}
        server {{$upstream}} {{printf "/haproxy/tcp/%s/upstreams/%s/listen" $name $upstream | getv}} check inter 5s
        {{end}}
{{end}}

listen stats
       mode http
       bind 0.0.0.0:1234
       stats enable
       stats uri /
       stats refresh 3s
       stats show-node
       stats show-legends
       stats realm Haproxy\ Statistics\ on\ Dev10
       stats auth beacon:beacon
